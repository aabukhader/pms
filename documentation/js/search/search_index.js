var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.127,1,1.127]],["body/controllers/AppController.html",[0,1.656,1,1.656,2,1.994,3,1.04,4,0.838,5,0.838,6,1.994,7,0.838,8,1.656,9,3.011,10,2.612,11,0.081,12,1.283,13,2.612,14,1.283,15,2.048,16,1.343,17,1.283,18,1.198,19,1.994,20,1.04,21,0.514,22,2.612,23,2.612,24,1.587,25,2.612,26,0.061,27,0.061]],["title/modules/AppModule.html",[28,1.394,29,1.127]],["body/modules/AppModule.html",[1,1.778,2,2.468,3,0.976,4,0.787,5,0.787,11,0.08,16,1.441,17,1.204,18,1.319,19,1.871,20,0.976,21,0.482,26,0.059,27,0.059,28,2.199,29,2.018,30,1.489,31,1.204,32,1.871,33,1.871,34,1.204,35,2.763,36,1.871,37,1.871,38,1.871,39,2.468,40,1.871,41,1.871,42,2.45,43,2.45,44,2.45]],["title/injectables/AppService.html",[18,0.736,45,1.127]],["body/injectables/AppService.html",[3,1.107,4,0.892,5,0.892,7,0.892,8,1.723,9,3.081,11,0.08,12,1.365,14,1.365,15,2.131,16,1.107,17,1.365,18,1.126,20,1.107,21,0.547,24,1.689,26,0.064,27,0.064,45,1.723,46,2.78,47,2.122,48,2.78,49,2.78,50,2.78]],["title/classes/DbConnector.html",[21,0.451,51,1.127]],["body/classes/DbConnector.html",[3,1.018,4,0.82,5,0.82,7,0.82,8,1.633,11,0.08,12,1.633,14,1.255,16,1.018,20,1.018,21,0.503,26,0.06,27,0.06,51,1.633,52,1.553,53,1.951,54,2.537,55,3.693,56,2.82,57,2.986,58,3.693,59,2.556,60,2.556,61,2.537,62,1.951,63,1.553,64,2.556,65,2.556,66,1.951,67,2.556]],["title/classes/Project.html",[21,0.451,68,1.127]],["body/classes/Project.html",[3,0.254,4,0.204,5,0.204,7,0.204,8,0.552,11,0.083,12,1.471,14,1.471,15,1.681,16,0.6,20,0.254,21,0.125,24,2.182,26,0.02,27,0.02,51,0.893,52,0.387,54,0.858,56,3.018,57,1.15,61,2.774,62,0.486,63,0.387,66,2.358,68,1.517,69,0.486,70,3.909,71,1.507,72,1.123,73,1.507,74,1.507,75,1.123,76,1.507,77,1.507,78,1.507,79,1.507,80,1.507,81,0.637,82,3.633,83,3.743,84,0.637,85,2.887,86,2.887,87,2.204,88,2.887,89,1.817,90,1.123,91,0.637,92,0.637,93,1.817,94,1.507,95,0.637,96,0.637,97,1.507,98,0.637,99,1.123,100,0.637,101,0.637,102,0.637,103,1.507,104,0.637,105,0.637,106,0.637,107,0.637,108,0.637,109,0.637,110,0.637,111,1.507,112,0.637,113,0.637,114,0.637,115,0.637,116,0.637,117,0.637,118,2.887,119,2.766,120,1.123,121,0.637,122,1.123,123,2.887,124,3.709,125,1.123,126,0.637,127,1.507,128,1.123,129,1.123,130,1.507,131,0.637,132,2.629,133,1.123,134,1.123,135,1.817,136,1.123,137,1.123,138,1.817,139,1.123,140,1.123,141,0.637,142,1.817,143,2.073,144,0.637,145,0.486,146,0.637,147,0.637,148,0.637,149,0.637]],["title/coverage.html",[150,1.88]],["body/coverage.html",[0,1.334,1,1.334,5,0.872,6,2.074,11,0.078,18,0.872,21,0.68,26,0.063,27,0.063,34,1.334,45,1.334,47,2.074,51,1.334,53,2.074,68,1.334,69,2.074,87,2.074,150,1.65,151,2.716,152,2.716,153,2.716,154,4.132,155,2.716,156,2.716,157,3.456,158,2.074,159,2.716,160,2.716,161,2.716,162,2.716,163,2.716]],["title/dependencies.html",[31,1.35,164,1.476]],["body/dependencies.html",[11,0.081,17,1.487,26,0.067,27,0.067,31,1.487,63,1.839,165,3.993,166,3.027,167,3.027,168,3.027,169,3.027,170,3.027,171,3.027,172,3.027,173,3.027,174,3.027]],["title/miscellaneous/functions.html",[175,1.476,176,2.098]],["body/miscellaneous/functions.html",[7,1.059,11,0.071,26,0.071,27,0.071,34,2.036,158,2.519,175,2.519,176,2.519,177,3.3]],["title/index.html",[7,0.621,178,1.933,179,1.933]],["body/index.html",[4,0.661,11,0.079,26,0.052,27,0.052,68,1.011,150,1.251,180,2.058,181,2.058,182,2.872,183,2.058,184,2.058,185,2.058,186,2.058,187,2.058,188,2.058,189,1.571,190,3.308,191,2.058,192,2.058,193,2.058,194,2.058,195,3.308,196,4.003,197,2.058,198,2.058,199,2.058,200,3.9,201,2.058,202,2.058,203,2.872,204,2.058,205,2.058,206,2.058,207,2.058,208,2.872,209,2.872,210,2.058,211,2.058,212,2.058,213,2.872,214,2.872,215,2.058,216,2.058,217,2.058,218,2.058,219,1.571,220,2.058,221,2.058,222,2.058,223,2.058,224,2.058,225,2.058,226,2.058,227,2.058,228,2.058,229,2.058,230,1.571,231,2.058,232,2.058,233,2.058,234,2.058,235,2.058,236,2.058,237,1.571]],["title/modules.html",[30,1.88]],["body/modules.html",[11,0.071,26,0.071,27,0.071,29,1.644,30,2.033,219,2.555,238,3.346,239,3.346,240,3.346]],["title/overview.html",[241,2.362]],["body/overview.html",[0,1.407,11,0.071,18,1.25,26,0.065,27,0.065,28,2.171,29,2.004,31,1.407,32,2.186,33,2.186,34,1.407,35,2.186,36,2.186,37,2.186,38,2.186,39,2.728,40,2.186,41,2.186,45,1.407,52,1.74,145,2.974,241,2.186,242,2.863]],["title/properties.html",[164,1.476,243,2.098]],["body/properties.html",[11,0.08,26,0.07,27,0.07,189,2.468,230,2.468,237,2.468,243,2.468,244,3.233,245,3.233,246,3.233]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/DbConnector.html":{},"classes/Project.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":154,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":245,"title":{},"body":{"properties.html":{}}}],["0.2.0",{"_index":172,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":160,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":156,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":157,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":155,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":145,"title":{},"body":{"classes/Project.html":{},"overview.html":{}}}],["10.0.0",{"_index":165,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":242,"title":{},"body":{"overview.html":{}}}],["5.18.0",{"_index":169,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":174,"title":{},"body":{"dependencies.html":{}}}],["active",{"_index":93,"title":{},"body":{"classes/Project.html":{}}}],["addcontributors",{"_index":71,"title":{},"body":{"classes/Project.html":{}}}],["addcontributors(contributorslist",{"_index":81,"title":{},"body":{"classes/Project.html":{}}}],["amazing",{"_index":220,"title":{},"body":{"index.html":{}}}],["app",{"_index":198,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":188,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["archivedprojectbyid",{"_index":72,"title":{},"body":{"classes/Project.html":{}}}],["archivedprojectbyid(id",{"_index":90,"title":{},"body":{"classes/Project.html":{}}}],["async",{"_index":56,"title":{},"body":{"classes/DbConnector.html":{},"classes/Project.html":{}}}],["author",{"_index":230,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":66,"title":{},"body":{"classes/DbConnector.html":{},"classes/Project.html":{}}}],["backers",{"_index":221,"title":{},"body":{"index.html":{}}}],["base/dbconnector",{"_index":115,"title":{},"body":{"classes/Project.html":{}}}],["boards",{"_index":130,"title":{},"body":{"classes/Project.html":{}}}],["boolean",{"_index":94,"title":{},"body":{"classes/Project.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":240,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":238,"title":{},"body":{"modules.html":{}}}],["building",{"_index":183,"title":{},"body":{"index.html":{}}}],["catch",{"_index":123,"title":{},"body":{"classes/Project.html":{}}}],["changeprojectstatebyid",{"_index":73,"title":{},"body":{"classes/Project.html":{}}}],["changeprojectstatebyid(id",{"_index":92,"title":{},"body":{"classes/Project.html":{}}}],["class",{"_index":21,"title":{"classes/DbConnector.html":{},"classes/Project.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/DbConnector.html":{},"classes/Project.html":{},"coverage.html":{}}}],["classes",{"_index":52,"title":{},"body":{"classes/DbConnector.html":{},"classes/Project.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["const",{"_index":119,"title":{},"body":{"classes/Project.html":{}}}],["constructor",{"_index":58,"title":{},"body":{"classes/DbConnector.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["contributors",{"_index":135,"title":{},"body":{"classes/Project.html":{}}}],["contributorslist",{"_index":89,"title":{},"body":{"classes/Project.html":{}}}],["contributorslist.split",{"_index":137,"title":{},"body":{"classes/Project.html":{}}}],["contributorsprojectlist",{"_index":133,"title":{},"body":{"classes/Project.html":{}}}],["contributorsprojectlist.contributors",{"_index":139,"title":{},"body":{"classes/Project.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["coverage",{"_index":150,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":74,"title":{},"body":{"classes/Project.html":{}}}],["create(project",{"_index":96,"title":{},"body":{"classes/Project.html":{}}}],["createdproject",{"_index":120,"title":{},"body":{"classes/Project.html":{}}}],["data",{"_index":122,"title":{},"body":{"classes/Project.html":{}}}],["dbconnector",{"_index":51,"title":{"classes/DbConnector.html":{}},"body":{"classes/DbConnector.html":{},"classes/Project.html":{},"coverage.html":{}}}],["dbconnector:8",{"_index":114,"title":{},"body":{"classes/Project.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["default",{"_index":149,"title":{},"body":{"classes/Project.html":{}}}],["defaultargs",{"_index":116,"title":{},"body":{"classes/Project.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/DbConnector.html":{},"classes/Project.html":{}}}],["deleteprojectbyid",{"_index":75,"title":{},"body":{"classes/Project.html":{}}}],["deleteprojectbyid(id",{"_index":99,"title":{},"body":{"classes/Project.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":189,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":199,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":151,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":210,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":184,"title":{},"body":{"index.html":{}}}],["error",{"_index":124,"title":{},"body":{"classes/Project.html":{}}}],["example",{"_index":195,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/DbConnector.html":{},"classes/Project.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["express",{"_index":168,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":54,"title":{},"body":{"classes/DbConnector.html":{},"classes/Project.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/DbConnector.html":{},"classes/Project.html":{},"coverage.html":{}}}],["framework",{"_index":182,"title":{},"body":{"index.html":{}}}],["function",{"_index":159,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":176,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getallbyownerid",{"_index":76,"title":{},"body":{"classes/Project.html":{}}}],["getallbyownerid(owner_id",{"_index":101,"title":{},"body":{"classes/Project.html":{}}}],["getboards",{"_index":77,"title":{},"body":{"classes/Project.html":{}}}],["getboards(id",{"_index":104,"title":{},"body":{"classes/Project.html":{}}}],["getbyid",{"_index":78,"title":{},"body":{"classes/Project.html":{}}}],["getbyid(id",{"_index":106,"title":{},"body":{"classes/Project.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":178,"title":{"index.html":{}},"body":{}}],["grow",{"_index":216,"title":{},"body":{"index.html":{}}}],["hello",{"_index":49,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":227,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":234,"title":{},"body":{"index.html":{}}}],["id",{"_index":82,"title":{},"body":{"classes/Project.html":{}}}],["identifier",{"_index":152,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/DbConnector.html":{},"classes/Project.html":{}}}],["imports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["include",{"_index":131,"title":{},"body":{"classes/Project.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/DbConnector.html":{},"classes/Project.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/DbConnector.html":{},"classes/Project.html":{}}}],["inherited",{"_index":113,"title":{},"body":{"classes/Project.html":{}}}],["initialize",{"_index":57,"title":{},"body":{"classes/DbConnector.html":{},"classes/Project.html":{}}}],["injectable",{"_index":45,"title":{"injectables/AppService.html":{}},"body":{"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":46,"title":{},"body":{"injectables/AppService.html":{}}}],["installation",{"_index":194,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":197,"title":{},"body":{"index.html":{}}}],["is_active",{"_index":148,"title":{},"body":{"classes/Project.html":{}}}],["is_archived",{"_index":147,"title":{},"body":{"classes/Project.html":{}}}],["is_deleted",{"_index":146,"title":{},"body":{"classes/Project.html":{}}}],["join",{"_index":223,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":231,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["license",{"_index":237,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":214,"title":{},"body":{"index.html":{}}}],["list",{"_index":136,"title":{},"body":{"classes/Project.html":{}}}],["list.map((item",{"_index":140,"title":{},"body":{"classes/Project.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/DbConnector.html":{},"classes/Project.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["metadata",{"_index":171,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/DbConnector.html":{},"classes/Project.html":{}}}],["miscellaneous",{"_index":175,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":213,"title":{},"body":{"index.html":{}}}],["mode",{"_index":203,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":226,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":232,"title":{},"body":{"index.html":{}}}],["name",{"_index":86,"title":{},"body":{"classes/Project.html":{}}}],["nest",{"_index":190,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":236,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":166,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":167,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":161,"title":{},"body":{"coverage.html":{}}}],["node.js",{"_index":181,"title":{},"body":{"index.html":{}}}],["number",{"_index":83,"title":{},"body":{"classes/Project.html":{}}}],["open",{"_index":215,"title":{},"body":{"index.html":{}}}],["optional",{"_index":88,"title":{},"body":{"classes/Project.html":{}}}],["out",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":241,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner_id",{"_index":103,"title":{},"body":{"classes/Project.html":{}}}],["package",{"_index":164,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":85,"title":{},"body":{"classes/Project.html":{}}}],["partial",{"_index":111,"title":{},"body":{"classes/Project.html":{}}}],["please",{"_index":224,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":196,"title":{},"body":{"index.html":{}}}],["prisma",{"_index":62,"title":{},"body":{"classes/DbConnector.html":{},"classes/Project.html":{}}}],["prisma.projectscreateinput",{"_index":97,"title":{},"body":{"classes/Project.html":{}}}],["prisma/client",{"_index":63,"title":{},"body":{"classes/DbConnector.html":{},"classes/Project.html":{},"dependencies.html":{}}}],["prisma/client/runtime/library",{"_index":117,"title":{},"body":{"classes/Project.html":{}}}],["prismaclient",{"_index":55,"title":{},"body":{"classes/DbConnector.html":{}}}],["production",{"_index":205,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":180,"title":{},"body":{"index.html":{}}}],["project",{"_index":68,"title":{"classes/Project.html":{}},"body":{"classes/Project.html":{},"coverage.html":{},"index.html":{}}}],["projects",{"_index":128,"title":{},"body":{"classes/Project.html":{}}}],["promise",{"_index":61,"title":{},"body":{"classes/DbConnector.html":{},"classes/Project.html":{}}}],["properties",{"_index":243,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":70,"title":{},"body":{"classes/Project.html":{}}}],["read",{"_index":225,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":170,"title":{},"body":{"dependencies.html":{}}}],["removecontributors",{"_index":79,"title":{},"body":{"classes/Project.html":{}}}],["removecontributors(contributorslist",{"_index":108,"title":{},"body":{"classes/Project.html":{}}}],["repository",{"_index":193,"title":{},"body":{"index.html":{}}}],["reset",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/DbConnector.html":{},"classes/Project.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Project.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/DbConnector.html":{},"classes/Project.html":{}}}],["run",{"_index":200,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":173,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":185,"title":{},"body":{"index.html":{}}}],["select",{"_index":134,"title":{},"body":{"classes/Project.html":{}}}],["server",{"_index":186,"title":{},"body":{"index.html":{}}}],["side",{"_index":187,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/DbConnector.html":{},"classes/Project.html":{},"index.html":{}}}],["sponsors",{"_index":218,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":177,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":47,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":48,"title":{},"body":{"injectables/AppService.html":{}}}],["src/core/base/dbconnector.ts",{"_index":53,"title":{},"body":{"classes/DbConnector.html":{},"coverage.html":{}}}],["src/core/base/dbconnector.ts:3",{"_index":59,"title":{},"body":{"classes/DbConnector.html":{}}}],["src/core/base/dbconnector.ts:8",{"_index":60,"title":{},"body":{"classes/DbConnector.html":{}}}],["src/core/projects.ts",{"_index":69,"title":{},"body":{"classes/Project.html":{},"coverage.html":{}}}],["src/core/projects.ts:124",{"_index":100,"title":{},"body":{"classes/Project.html":{}}}],["src/core/projects.ts:133",{"_index":91,"title":{},"body":{"classes/Project.html":{}}}],["src/core/projects.ts:142",{"_index":95,"title":{},"body":{"classes/Project.html":{}}}],["src/core/projects.ts:17",{"_index":112,"title":{},"body":{"classes/Project.html":{}}}],["src/core/projects.ts:32",{"_index":107,"title":{},"body":{"classes/Project.html":{}}}],["src/core/projects.ts:43",{"_index":102,"title":{},"body":{"classes/Project.html":{}}}],["src/core/projects.ts:58",{"_index":105,"title":{},"body":{"classes/Project.html":{}}}],["src/core/projects.ts:6",{"_index":98,"title":{},"body":{"classes/Project.html":{}}}],["src/core/projects.ts:74",{"_index":84,"title":{},"body":{"classes/Project.html":{}}}],["src/core/projects.ts:99",{"_index":109,"title":{},"body":{"classes/Project.html":{}}}],["src/main.ts",{"_index":158,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":201,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":204,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":206,"title":{},"body":{"index.html":{}}}],["started",{"_index":179,"title":{"index.html":{}},"body":{}}],["starter",{"_index":192,"title":{},"body":{"index.html":{}}}],["statements",{"_index":153,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":228,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Project.html":{}}}],["super",{"_index":64,"title":{},"body":{"classes/DbConnector.html":{}}}],["support",{"_index":219,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":239,"title":{},"body":{"modules.html":{}}}],["table",{"_index":163,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":162,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":209,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":212,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":211,"title":{},"body":{"index.html":{}}}],["tests",{"_index":208,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":217,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":67,"title":{},"body":{"classes/DbConnector.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.initialize",{"_index":65,"title":{},"body":{"classes/DbConnector.html":{}}}],["this.projects.create",{"_index":121,"title":{},"body":{"classes/Project.html":{}}}],["this.projects.findmany",{"_index":129,"title":{},"body":{"classes/Project.html":{}}}],["this.projects.findunique",{"_index":127,"title":{},"body":{"classes/Project.html":{}}}],["this.projects.update",{"_index":126,"title":{},"body":{"classes/Project.html":{}}}],["this.update(id",{"_index":143,"title":{},"body":{"classes/Project.html":{}}}],["touch",{"_index":229,"title":{},"body":{"index.html":{}}}],["true",{"_index":132,"title":{},"body":{"classes/Project.html":{}}}],["try",{"_index":118,"title":{},"body":{"classes/Project.html":{}}}],["twitter",{"_index":235,"title":{},"body":{"index.html":{}}}],["type",{"_index":87,"title":{},"body":{"classes/Project.html":{},"coverage.html":{}}}],["typescript",{"_index":191,"title":{},"body":{"index.html":{}}}],["unit",{"_index":207,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":246,"title":{},"body":{"properties.html":{}}}],["update",{"_index":80,"title":{},"body":{"classes/Project.html":{}}}],["update(id",{"_index":110,"title":{},"body":{"classes/Project.html":{}}}],["updatedlist",{"_index":138,"title":{},"body":{"classes/Project.html":{}}}],["updatedlist.push(item",{"_index":141,"title":{},"body":{"classes/Project.html":{}}}],["updatedlist.splice(updatedlist.indexof(item",{"_index":144,"title":{},"body":{"classes/Project.html":{}}}],["updatedproject",{"_index":142,"title":{},"body":{"classes/Project.html":{}}}],["updateproject",{"_index":125,"title":{},"body":{"classes/Project.html":{}}}],["version",{"_index":244,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":202,"title":{},"body":{"index.html":{}}}],["website",{"_index":233,"title":{},"body":{"index.html":{}}}],["world",{"_index":50,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":222,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\n@Module({\n  imports: [],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DbConnector.html":{"url":"classes/DbConnector.html","title":"class - DbConnector","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DbConnector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Core/Base/DbConnector.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                initialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/Core/Base/DbConnector.ts:3\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/Core/Base/DbConnector.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PrismaClient, Prisma } from '@prisma/client';\n\nexport class DbConnector extends PrismaClient {\n  constructor() {\n    super();\n    this.initialize();\n  }\n  async initialize(): Promise {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Project.html":{"url":"classes/Project.html","title":"class - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Core/Projects.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            DbConnector\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addContributors\n                            \n                            \n                                    Public\n                                    Async\n                                archivedProjectById\n                            \n                            \n                                    Public\n                                    Async\n                                changeProjectStateById\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                deleteProjectById\n                            \n                            \n                                    Public\n                                    Async\n                                getAllByOwnerId\n                            \n                            \n                                    Public\n                                    Async\n                                getBoards\n                            \n                            \n                                    Public\n                                    Async\n                                getById\n                            \n                            \n                                    Public\n                                    Async\n                                removeContributors\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                initialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        addContributors\n                        \n                    \n                \n            \n            \n                \n                        \n                    addContributors(contributorsList: String, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Core/Projects.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                contributorsList\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        archivedProjectById\n                        \n                    \n                \n            \n            \n                \n                        \n                    archivedProjectById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Core/Projects.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        changeProjectStateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeProjectStateById(id: number, active: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Core/Projects.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                active\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(project: Prisma.ProjectsCreateInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Core/Projects.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                project\n                                            \n                                                            Prisma.ProjectsCreateInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteProjectById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProjectById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Core/Projects.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getAllByOwnerId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllByOwnerId(owner_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Core/Projects.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                owner_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getBoards\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBoards(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Core/Projects.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Core/Projects.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        removeContributors\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeContributors(contributorsList: String, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Core/Projects.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                contributorsList\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, project: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Core/Projects.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                project\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         DbConnector\n\n                        \n                    \n                    \n                        \n                                Defined in         DbConnector:8\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Prisma } from '@prisma/client';\nimport { DbConnector } from './Base/DbConnector';\nimport { DefaultArgs } from '@prisma/client/runtime/library';\n\nclass Project extends DbConnector {\n  public async create(\n    project: Prisma.ProjectsCreateInput,\n  ): Promise {\n    try {\n      const createdProject = await this.projects.create({ data: project });\n      return createdProject;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  public async update(\n    id: number,\n    project: Partial,\n  ): Promise {\n    try {\n      const updateProject = await this.projects.update({\n        where: { id },\n        data: project,\n      });\n      return updateProject;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  public async getById(\n    id: number,\n  ): Promise> | Error> {\n    try {\n      const project = await this.projects.findUnique({ where: { id } });\n      return project;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  public async getAllByOwnerId(\n    owner_id: string,\n  ): Promise>> | Error> {\n    try {\n      const projects = await this.projects.findMany({\n        where: {\n          owner_id,\n        },\n      });\n      return projects;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  public async getBoards(\n    id: number,\n  ): Promise>> | Error> {\n    try {\n      const boards = await this.projects.findMany({\n        where: { id },\n        include: {\n          boards: true,\n        },\n      });\n      return boards;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  public async addContributors(\n    contributorsList: String,\n    id: number,\n  ): Promise {\n    try {\n      const contributorsProjectList = await this.projects.findUnique({\n        where: { id },\n        select: {\n          contributors: true,\n        },\n      });\n      let list = contributorsList.split(',');\n      let updatedList = [...contributorsProjectList.contributors];\n      list.map((item) => {\n        updatedList.push(item);\n      });\n      const updatedProject = await this.update(id, {\n        contributors: updatedList,\n      });\n      return updatedProject;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  public async removeContributors(\n    contributorsList: String,\n    id: number,\n  ): Promise {\n    try {\n      const contributorsProjectList = await this.projects.findUnique({\n        where: { id },\n        select: {\n          contributors: true,\n        },\n      });\n      let list = contributorsList.split(',');\n      let updatedList = [...contributorsProjectList.contributors];\n      list.map((item) => {\n        updatedList.splice(updatedList.indexOf(item), 1);\n      });\n      const updatedProject = await this.update(id, {\n        contributors: updatedList,\n      });\n      return updatedProject;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  public async deleteProjectById(id: number): Promise {\n    try {\n      await this.update(id, { is_deleted: true });\n      return true;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  public async archivedProjectById(id: number): Promise {\n    try {\n      await this.update(id, { is_archived: true });\n      return true;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  public async changeProjectStateById(\n    id: number,\n    active: boolean,\n  ): Promise {\n    try {\n      await this.update(id, { is_active: active });\n      return true;\n    } catch (error) {\n      return error;\n    }\n  }\n}\n\nexport default Project;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/Core/Base/DbConnector.ts\n            \n            class\n            DbConnector\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Core/Projects.ts\n            \n            class\n            Project\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @prisma/client : 5.18.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ pnpm installRunning the app\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
